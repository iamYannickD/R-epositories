style = cell_fill(color = "#00B050"),
locations = cells_body(
columns = Prop_ITD_21days,
rows = Prop_ITD_21days == 100)
) |>
# for no data
tab_style(
style = cell_fill(color = "gray"),
locations = cells_body(
columns = Prop_ITD_21days,
rows = is.na(Prop_ITD_21days))
) |>
tab_style(
style = cell_fill(color = "gray"),
locations = cells_body(
columns = Prop_ITD_7days,
rows = is.na(Prop_ITD_7days))
) |>
# Color in gray the table and beautify the formating
opt_stylize(style = 6, color = 'gray') |>
#call that theme
#other themes gt_theme_excel()  |>gt_theme_pff() |>
gt_theme_excel() |>
opt_align_table_header(align = "center") |>
#reshape the table
tab_options(
data_row.padding = px(2),
summary_row.padding = px(3), # A bit more padding for summaries
row_group.padding = px(4)    # And even more for our groups
) |>
tab_style(
#style = cell_text(weight = "bold"),
# Color each country in the group
style = cell_fill(color = "lightgray"),
locations = cells_row_groups(groups = everything())
) |>
opt_css(
css = "
.cell-output-display {
overflow-x: unset !important;
}
div#two {
overflow-x: unset !important;
overflow-y: unset !important;
}
#two .gt_col_heading {
position: sticky !important;
top: 0 !important;
}
"
)
EStables2024
EStables2024 |>
group_by(Labname) |>
mutate(Labname = str_replace_all(Labname, "ESWATINI", "SOA" )
) |>
summarize(
workload_by_lab = n(),
Sample_good_cond = sum(Samplecondition == "1-Good", na.rm = TRUE),
Prop_sample_good_cond = round(Sample_good_cond / workload_by_lab * 100, 0),
culture_results = sum(!is.na(Finalcellcultureresult) & !is.nan(Finalcellcultureresult) & !is.null(Finalcellcultureresult), na.rm = TRUE),
culture_results_14days = sum(!is.na(Finalcellcultureresult) & !is.nan(Finalcellcultureresult) & !is.null(Finalcellcultureresult) &
(Datefinalcultureresult - Datesampleinlab) < 15 &
(Datefinalcultureresult - Datesampleinlab) >= 0, na.rm = TRUE),
Prop_culture_results_14days = round(culture_results_14days / culture_results * 100, 0),
ITD_results = sum(str_detect(Finalcellcultureresult, "^1") | str_detect(Finalcellcultureresult, "^4"), na.rm = TRUE),
ITD_results_7days = sum((str_detect(Finalcellcultureresult, "^1") | str_detect(Finalcellcultureresult, "^4")) &
(as.Date(date_itd_result) - as.Date(date_result_to_lab)) < 8 &
(as.Date(date_itd_result) - as.Date(date_result_to_lab)) >= 0, na.rm = TRUE),
Prop_ITD_7days = round(ITD_results_7days / ITD_results * 100, 0),
ITD_results_21days = sum( (str_detect(Finalcellcultureresult, "^1") | str_detect(Finalcellcultureresult, "^4")) &
!is.na(FinalcombinedrRTPCRresults) & (DateFinalCombinedResult - Datesampleinlab) < 22 &
(DateFinalCombinedResult - Datesampleinlab) >= 0, na.rm = TRUE),
Prop_ITD_21days = round(ITD_results_21days / ITD_results * 100, 0)
) |>
select(Labname, workload_by_lab, Prop_sample_good_cond, culture_results, culture_results_14days,
Prop_culture_results_14days, ITD_results, ITD_results_7days, Prop_ITD_7days, ITD_results_21days, Prop_ITD_21days) |>
gt() |>
#edit some columns names
cols_label(
"workload_by_lab" = "# of Stool specimens",
"culture_results" = "# Culture Results",
"culture_results_14days" = "# of Culture results in 14 days",
"ITD_results" = "# ITD Results",
"ITD_results_7days" = "ITD Results in 7 days",
"ITD_results_21days" = "ITD results in 21 days",
"Prop_sample_good_cond" = "Samples in Good Condition",
"Prop_culture_results_14days" = "PV Isolation Results on Time",
"Prop_ITD_7days" = "ITD Results in 7 days of receipt of Isolate",
"Prop_ITD_21days" = "Stool speciments with Final lab results availaible in 21 days of receipt"
) |>
#center the values in the defined columns
cols_align(
align = "center",
columns = c(1:11)
) |>
#give a header to the table as well as a sub title
tab_header(
title = md(paste0("**ES : SUMMARY OF AFRO LABORATORY KEY PERFORMANCE INDICATORS (KPIs)** ")),
subtitle = md(paste0("**",Specify_the_period,"**")) ) |>
# add percentage in cells
fmt_number(
columns = c(`Prop_sample_good_cond`, `Prop_culture_results_14days`,
`Prop_ITD_7days`, `Prop_ITD_21days`),
decimals = 0,
pattern = "{x} %"
) |>
sub_missing(
columns = 2:11,
rows = everything(),
missing_text = "-"
#missing_text = "---"
) |>
#color the table based on the values in those cells
# For sample conditions ====
tab_style(
style = cell_fill(color = "#00B050"),
locations = cells_body(
columns = Prop_sample_good_cond,
rows = Prop_sample_good_cond >= 80)
)  |>
tab_style(
style = cell_fill(color = "yellow"),
locations = cells_body(
columns = Prop_sample_good_cond,
rows = Prop_sample_good_cond < 80)
) |>
tab_style(
style = cell_fill(color = "#00B050"),
locations = cells_body(
columns = Prop_sample_good_cond,
rows = Prop_sample_good_cond == 100)
) |>
# for pv isolation time 14 days
tab_style(
style = cell_fill(color = "#00B050"),
locations = cells_body(
columns = Prop_culture_results_14days,
rows = Prop_culture_results_14days >= 80)
)  |>
tab_style(
style = cell_fill(color = "yellow"),
locations = cells_body(
columns = Prop_culture_results_14days,
rows = Prop_culture_results_14days < 80)
) |>
tab_style(
style = cell_fill(color = "#00B050"),
locations = cells_body(
columns = Prop_culture_results_14days,
rows = Prop_culture_results_14days == 100)
) |>
# for ITD 7 days
tab_style(
style = cell_fill(color = "#00B050"),
locations = cells_body(
columns = Prop_ITD_7days,
rows = Prop_ITD_7days >= 80)
)  |>
tab_style(
style = cell_fill(color = "yellow"),
locations = cells_body(
columns = Prop_ITD_7days,
rows = Prop_ITD_7days < 80)
) |>
tab_style(
style = cell_fill(color = "#00B050"),
locations = cells_body(
columns = Prop_culture_results_14days,
rows = Prop_culture_results_14days == 100)
) |>
# for ITD 21 days
tab_style(
style = cell_fill(color = "#00B050"),
locations = cells_body(
columns = Prop_ITD_21days,
rows = Prop_ITD_21days >= 80)
)  |>
tab_style(
style = cell_fill(color = "yellow"),
locations = cells_body(
columns = Prop_ITD_21days,
rows = Prop_ITD_21days < 80)
) |>
tab_style(
style = cell_fill(color = "#00B050"),
locations = cells_body(
columns = Prop_ITD_21days,
rows = Prop_ITD_21days == 100)
) |>
# for no data
tab_style(
style = cell_fill(color = "gray"),
locations = cells_body(
columns = Prop_ITD_21days,
rows = is.na(Prop_ITD_21days))
) |>
tab_style(
style = cell_fill(color = "gray"),
locations = cells_body(
columns = Prop_ITD_7days,
rows = is.na(Prop_ITD_7days))
) |>
# Color in gray the table and beautify the formating
opt_stylize(style = 6, color = 'gray') |>
#call that theme
#other themes gt_theme_excel()  |>gt_theme_pff() |>
gt_theme_excel() |>
opt_align_table_header(align = "center") |>
#reshape the table
tab_options(
data_row.padding = px(2),
summary_row.padding = px(3), # A bit more padding for summaries
row_group.padding = px(4)    # And even more for our groups
) |>
tab_style(
#style = cell_text(weight = "bold"),
# Color each country in the group
style = cell_fill(color = "lightgray"),
locations = cells_row_groups(groups = everything())
) |>
opt_css(
css = "
.cell-output-display {
overflow-x: unset !important;
}
div#two {
overflow-x: unset !important;
overflow-y: unset !important;
}
#two .gt_col_heading {
position: sticky !important;
top: 0 !important;
}
"
)
# Check if the package pacman is installed
if (!require("pacman")) {install.packages("pacman")}
library("pacman")
# Load packages =====
#RODBC to be able to work with microsoft access databases, allowing R to connect to Open Database Connectivity (ODBC) APIs
p_load(tidyverse, RODBC,gt, gtExtras)
#Give the path to the ES database
Specify_the_period <- "WEEK 1 - 21, 2024"
path_ES_2024 = "../data/dbs/test/es.mdb"
# Connect to the Microsoft Access database ====
ESdb2024 <- DBI::dbConnect(odbc::odbc(),
.connection_string = paste0("Driver={Microsoft Access Driver (*.mdb, *.accdb)};
DBQ=", path_ES_2024))
# load data in R =====
# Retrieve all data from the AFP database
EStables2024 <- DBI::dbGetQuery(ESdb2024, "SELECT * FROM Environmental ORDER BY IDNumber;", stringsAsFactors = FALSE) |>
as_tibble() |>
mutate(Labname = str_replace_all(Labname, c("ENTEBBE" = "UGA", "GHANA" = "GHA", "INRB" = "RDC", "IPD SEN" = "SEN",
"IPM, MAD" = "MAD", "IPM,MAD" = "MAD", "KEMRI" = "KEN", "IBD, Nigeria" = "IBD",
"MDG, Nigeria" = "MDG", "ZAM UTH" = "ZAM", "ZAM-UTH" = "ZAM")),
date_result_to_lab = coalesce(Dateresultstolab, Datefinalcultureresult),
date_itd_result = coalesce(DateFinalCombinedResult, DatefinalResultReported)
)
EStables2024 |>
group_by(Labname) |>
mutate(Labname = str_replace_all(Labname, "ESWATINI", "SOA" )
) |>
summarize(
workload_by_lab = n(),
Sample_good_cond = sum(Samplecondition == "1-Good", na.rm = TRUE),
Prop_sample_good_cond = round(Sample_good_cond / workload_by_lab * 100, 0),
culture_results = sum(!is.na(Finalcellcultureresult) & !is.nan(Finalcellcultureresult) & !is.null(Finalcellcultureresult), na.rm = TRUE),
culture_results_14days = sum(!is.na(Finalcellcultureresult) & !is.nan(Finalcellcultureresult) & !is.null(Finalcellcultureresult) &
(Datefinalcultureresult - Datesampleinlab) < 15 &
(Datefinalcultureresult - Datesampleinlab) >= 0, na.rm = TRUE),
Prop_culture_results_14days = round(culture_results_14days / culture_results * 100, 0),
ITD_results = sum(str_detect(Finalcellcultureresult, "^1") | str_detect(Finalcellcultureresult, "^4"), na.rm = TRUE),
ITD_results_7days = sum((str_detect(Finalcellcultureresult, "^1") | str_detect(Finalcellcultureresult, "^4")) &
(as.Date(date_itd_result) - as.Date(date_result_to_lab)) < 8 &
(as.Date(date_itd_result) - as.Date(date_result_to_lab)) >= 0, na.rm = TRUE),
Prop_ITD_7days = round(ITD_results_7days / ITD_results * 100, 0),
ITD_results_21days = sum( (str_detect(Finalcellcultureresult, "^1") | str_detect(Finalcellcultureresult, "^4")) &
!is.na(FinalcombinedrRTPCRresults) & (DateFinalCombinedResult - Datesampleinlab) < 22 &
(DateFinalCombinedResult - Datesampleinlab) >= 0, na.rm = TRUE),
Prop_ITD_21days = round(ITD_results_21days / ITD_results * 100, 0)
) |>
select(Labname, workload_by_lab, Prop_sample_good_cond, culture_results, culture_results_14days,
Prop_culture_results_14days, ITD_results, ITD_results_7days, Prop_ITD_7days, ITD_results_21days, Prop_ITD_21days) |>
gt() |>
#edit some columns names
cols_label(
"workload_by_lab" = "# of Stool specimens",
"culture_results" = "# Culture Results",
"culture_results_14days" = "# of Culture results in 14 days",
"ITD_results" = "# ITD Results",
"ITD_results_7days" = "ITD Results in 7 days",
"ITD_results_21days" = "ITD results in 21 days",
"Prop_sample_good_cond" = "Samples in Good Condition",
"Prop_culture_results_14days" = "PV Isolation Results on Time",
"Prop_ITD_7days" = "ITD Results in 7 days of receipt of Isolate",
"Prop_ITD_21days" = "Stool speciments with Final lab results availaible in 21 days of receipt"
) |>
#center the values in the defined columns
cols_align(
align = "center",
columns = c(1:11)
) |>
#give a header to the table as well as a sub title
tab_header(
title = md(paste0("**ES : SUMMARY OF AFRO LABORATORY KEY PERFORMANCE INDICATORS (KPIs)** ")),
subtitle = md(paste0("**",Specify_the_period,"**")) ) |>
# add percentage in cells
fmt_number(
columns = c(`Prop_sample_good_cond`, `Prop_culture_results_14days`,
`Prop_ITD_7days`, `Prop_ITD_21days`),
decimals = 0,
pattern = "{x} %"
) |>
sub_missing(
columns = 2:11,
rows = everything(),
missing_text = "-"
#missing_text = "---"
) |>
#color the table based on the values in those cells
# For sample conditions ====
tab_style(
style = cell_fill(color = "#00B050"),
locations = cells_body(
columns = Prop_sample_good_cond,
rows = Prop_sample_good_cond >= 80)
)  |>
tab_style(
style = cell_fill(color = "yellow"),
locations = cells_body(
columns = Prop_sample_good_cond,
rows = Prop_sample_good_cond < 80)
) |>
tab_style(
style = cell_fill(color = "#00B050"),
locations = cells_body(
columns = Prop_sample_good_cond,
rows = Prop_sample_good_cond == 100)
) |>
# for pv isolation time 14 days
tab_style(
style = cell_fill(color = "#00B050"),
locations = cells_body(
columns = Prop_culture_results_14days,
rows = Prop_culture_results_14days >= 80)
)  |>
tab_style(
style = cell_fill(color = "yellow"),
locations = cells_body(
columns = Prop_culture_results_14days,
rows = Prop_culture_results_14days < 80)
) |>
tab_style(
style = cell_fill(color = "#00B050"),
locations = cells_body(
columns = Prop_culture_results_14days,
rows = Prop_culture_results_14days == 100)
) |>
# for ITD 7 days
tab_style(
style = cell_fill(color = "#00B050"),
locations = cells_body(
columns = Prop_ITD_7days,
rows = Prop_ITD_7days >= 80)
)  |>
tab_style(
style = cell_fill(color = "yellow"),
locations = cells_body(
columns = Prop_ITD_7days,
rows = Prop_ITD_7days < 80)
) |>
tab_style(
style = cell_fill(color = "#00B050"),
locations = cells_body(
columns = Prop_culture_results_14days,
rows = Prop_culture_results_14days == 100)
) |>
# for ITD 21 days
tab_style(
style = cell_fill(color = "#00B050"),
locations = cells_body(
columns = Prop_ITD_21days,
rows = Prop_ITD_21days >= 80)
)  |>
tab_style(
style = cell_fill(color = "yellow"),
locations = cells_body(
columns = Prop_ITD_21days,
rows = Prop_ITD_21days < 80)
) |>
tab_style(
style = cell_fill(color = "#00B050"),
locations = cells_body(
columns = Prop_ITD_21days,
rows = Prop_ITD_21days == 100)
) |>
# for no data
tab_style(
style = cell_fill(color = "gray"),
locations = cells_body(
columns = Prop_ITD_21days,
rows = is.na(Prop_ITD_21days))
) |>
tab_style(
style = cell_fill(color = "gray"),
locations = cells_body(
columns = Prop_ITD_7days,
rows = is.na(Prop_ITD_7days))
) |>
# Color in gray the table and beautify the formating
opt_stylize(style = 6, color = 'gray') |>
#call that theme
#other themes gt_theme_excel()  |>gt_theme_pff() |>
gt_theme_excel() |>
opt_align_table_header(align = "center") |>
#reshape the table
tab_options(
data_row.padding = px(2),
summary_row.padding = px(3), # A bit more padding for summaries
row_group.padding = px(4)    # And even more for our groups
) |>
tab_style(
#style = cell_text(weight = "bold"),
# Color each country in the group
style = cell_fill(color = "lightgray"),
locations = cells_row_groups(groups = everything())
) |>
opt_css(
css = "
.cell-output-display {
overflow-x: unset !important;
}
div#two {
overflow-x: unset !important;
overflow-y: unset !important;
}
#two .gt_col_heading {
position: sticky !important;
top: 0 !important;
}
"
)
# Check if the package pacman is installed (pacman Install and load multiple desired packages at once) =====
if (!require("pacman")) {install.packages("pacman")}
library("pacman")
#install library to import geojson, ggspatial enable R to read and manipulate geojson spatial features ====
#and ggrepel allows to edit the labels and avoid overlaps
#raster is for geographic data analysis, in this case to generate a random point within the district polygon
p_load(tidyverse, sf)
# Virus isolation/ITD laboratories in Afro =====
virus_isolation <- read_csv("../data/data/polio_lab_network_afro.csv")
polio_labs <- read_csv("../data/data/Geocoordinates of Labs in African region.csv")
# virus count by lab
virusIsol_by_lab <-
virus_isolation |>
count(`Virus Isolation`) |>
mutate(label_visolation = paste0(`Virus Isolation`, " (", n, ")"))
seq_by_lab <-
virus_isolation |>
count(`Sequencing Lab`) |>
mutate(label_Seq = paste0(`Sequencing Lab`," (", n, ")"))
vec_labs_Seq <-
setNames(seq_by_lab$label_Seq, seq_by_lab$`Sequencing Lab`)
# create a named vector with the values of virus by lab
virus_label <-
setNames(virusIsol_by_lab$label_visolation, virusIsol_by_lab$`Virus Isolation`)
# load administrative boundaries =====
afro_Adm0 <-
read_rds("../data/global.ctry.rds") |>
filter(`WHO_REGION` == "AFRO" |
ADM0_NAME %in% c("EGYPT", "MOROCCO", "TUNISIA", "WESTERN SAHARA", "SUDAN", "LIBYA", "SOMALIA", "DJIBOUTI"))
afro_cntries <-
read_rds("../data/global.ctry.rds") |>
filter(WHO_REGION %in% "AFRO" | ADM0_NAME == c("SOMALIA", "DJIBOUTI")) |>
left_join(y = virus_isolation, by = c("ADM0_NAME" = "COUNTRY"))
# Virus isolation =====
virus_isolation_map <-
ggplot() +
geom_sf(data = afro_Adm0, aes(fill = "gray"), fill = "gray", color = "white") +
geom_sf(data = afro_cntries, aes(fill = `Virus Isolation`), color = "black", size = 2) +
geom_point(data = polio_labs, aes(x = `X (LONG)` , y = `Y (LAT)`, shape = "Polio Labs"), color = "black", size = 3) +
scale_fill_manual(values = c("ALG" =  "#a6cee3", "SOA" =  "#1f78b4", "GHA" =  "#b2df8a", "SEN" =  "#33a02c",
"UGA" =  "#fb9a99", "CAE" =  "#ffff99", "CAF" =  "#f768a1", "CIV" =  "cyan",
"RDC" =  "#ec7014", "ETH" =  "#fdbf6f", "KEN" =  "lightgreen", "MAD" =  "#66bd63",
"IBD, MDG" =  "#01665e", "ZAM" =  "#cab2d6", "ZIM" =  "#7fcdbb"), na.value = "grey50",
labels = virus_label) +
scale_shape_manual(name = "Polio Labs", values = c("Polio Labs" = 8)) +
labs(fill = " ") + # remove the old legend name - Virus Isolation/ ITD Labs
theme_bw() +
guides(fill = guide_legend(order = 1),
shape = guide_legend(order = 2)) +
theme(legend.position = c(0.93, 0.5),
axis.title.x=element_blank(),  # remove x and y titles
axis.title.y=element_blank(),
legend.background = element_rect(fill = NA, color = NA)) #+
# Sequencing labs =====
sequencing_map <-
ggplot() +
geom_sf(data = afro_Adm0, aes(fill = "gray"), fill = "gray", color = "white") +
geom_sf(data = afro_cntries, aes(fill = `Sequencing Lab`), color = "black", size = 2) +
#geom_point(data = polio_labs, aes(x = `X (LONG)` , y = `Y (LAT)`), color = "black", size = 3, shape = 10) +
scale_fill_manual(values = c("CDC" =  "#377eb8", "NICD" =  "#4daf4a",
"IPP" =  "#984ea3", "GHA" =  "#ff7f00"), na.value = "grey50",
labels = vec_labs_Seq) +
labs(fill = " ") + # remove the old legend name
theme_bw() +
theme(legend.position = c(0.93, 0.5),
legend.background = element_rect(fill = NA, color = NA))
# plots
virus_isolation_map
sequencing_map
